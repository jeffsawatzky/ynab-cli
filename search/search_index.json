{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to YNAB CLI","text":"<p>This is a simple cli/tui application written in python to help manage your YNAB data.</p>"},{"location":"#requirements","title":"Requirements","text":"<ul> <li>uv which allows you to easily run python applications.</li> <li>Your YNAB developer access token.</li> </ul> <p>Warning</p> <p>Developer access tokens are rate limited to 200 requests per hour. Some of the commands below will provide you an opportunity to enter a new developer access token when the current one has exceeded it's limit. It also seems like there is a limit to how many developer access tokens you can create from the developer settings UI.</p> <ul> <li>Your YNAB budget ID. Once you have <code>uv</code> and your <code>access token</code> you can list your budgets by running:</li> </ul> <pre><code>$ uvx ynab-cli run --access-token your_access_token budgets list-all\n</code></pre>"},{"location":"#usage","title":"Usage","text":"<p>Note</p> <p>YNAB CLI supports environment variables and dotenv (<code>.env</code>) files for specifying options. See the <code>.env-sample</code> file for some examples. YNAB CLI looks for the <code>.env</code> file in current working directory. If you create a <code>.env</code> file with the following information you won't need to keep entering it on the command line.</p> .env<pre><code>YNAB_CLI_ACCESS_TOKEN=your_access_token\nYNAB_CLI_BUDGET_ID=your_budget_id\n</code></pre> <p>To run the text ui, execute the following command:</p> <pre><code>$ uvx ynab-cli\n</code></pre> <p>The individual CLI commands can be similarily run using <code>uvx</code>. Full command line usage is below.</p>"},{"location":"#ynab-cli","title":"ynab-cli","text":"<p>Main entrypoint.</p> <p>Usage:</p> <pre><code>ynab-cli [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> Name Type Description Default <code>--debug</code> boolean Enable debug mode for more verbose output. <code>False</code> <code>--version</code> boolean Show the version and exit. <code>False</code> <code>--help</code> boolean Show this message and exit. <code>False</code> <p>Subcommands</p> <ul> <li>run: Main entrypoint for YNAB CLI commands.</li> <li>tui: Run the Textual User Interface (TUI) for YNAB CLI.</li> </ul>"},{"location":"#ynab-cli-run","title":"ynab-cli run","text":"<p>Main entrypoint for YNAB CLI commands.</p> <p>Usage:</p> <pre><code>ynab-cli run [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> Name Type Description Default <code>--access-token</code> text YNAB API access token. None <code>--help</code> boolean Show this message and exit. <code>False</code> <p>Subcommands</p> <ul> <li>budgets: Manage YNAB budgets in YNAB.</li> <li>categories: Manage YNAB categories in the YNAB budget.</li> <li>payees: Manage payees in the YNAB budget.</li> <li>transactions: Manage transactions in the YNAB budget.</li> </ul>"},{"location":"#ynab-cli-run-budgets","title":"ynab-cli run budgets","text":"<p>Manage YNAB budgets in YNAB.</p> <p>Usage:</p> <pre><code>ynab-cli run budgets [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> Name Type Description Default <code>--help</code> boolean Show this message and exit. <code>False</code> <p>Subcommands</p> <ul> <li>list-all: List all budgets in YNAB.</li> </ul>"},{"location":"#ynab-cli-run-budgets-list-all","title":"ynab-cli run budgets list-all","text":"<p>List all budgets in YNAB.</p> <p>Usage:</p> <pre><code>ynab-cli run budgets list-all [OPTIONS]\n</code></pre> <p>Options:</p> Name Type Description Default <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"#ynab-cli-run-categories","title":"ynab-cli run categories","text":"<p>Manage YNAB categories in the YNAB budget.</p> <p>Usage:</p> <pre><code>ynab-cli run categories [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> Name Type Description Default <code>--budget-id</code> text YNAB budget ID. None <code>--help</code> boolean Show this message and exit. <code>False</code> <p>Subcommands</p> <ul> <li>list-all: List all categories in the YNAB budget.</li> <li>list-unused: List unused categories in the YNAB budget.</li> </ul>"},{"location":"#ynab-cli-run-categories-list-all","title":"ynab-cli run categories list-all","text":"<p>List all categories in the YNAB budget.</p> <p>Usage:</p> <pre><code>ynab-cli run categories list-all [OPTIONS]\n</code></pre> <p>Options:</p> Name Type Description Default <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"#ynab-cli-run-categories-list-unused","title":"ynab-cli run categories list-unused","text":"<p>List unused categories in the YNAB budget.</p> <p>Usage:</p> <pre><code>ynab-cli run categories list-unused [OPTIONS]\n</code></pre> <p>Options:</p> Name Type Description Default <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"#ynab-cli-run-payees","title":"ynab-cli run payees","text":"<p>Manage payees in the YNAB budget.</p> <p>Usage:</p> <pre><code>ynab-cli run payees [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> Name Type Description Default <code>--budget-id</code> text YNAB budget ID. None <code>--help</code> boolean Show this message and exit. <code>False</code> <p>Subcommands</p> <ul> <li>list-all: List all payees in the YNAB budget.</li> <li>list-duplicates: List duplicate payees in the YNAB budget.</li> <li>list-unused: List unused payees in the YNAB budget.</li> <li>normalize-names: Normalize payee names in the YNAB budget.</li> </ul>"},{"location":"#ynab-cli-run-payees-list-all","title":"ynab-cli run payees list-all","text":"<p>List all payees in the YNAB budget.</p> <p>Usage:</p> <pre><code>ynab-cli run payees list-all [OPTIONS]\n</code></pre> <p>Options:</p> Name Type Description Default <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"#ynab-cli-run-payees-list-duplicates","title":"ynab-cli run payees list-duplicates","text":"<p>List duplicate payees in the YNAB budget.</p> <p>Usage:</p> <pre><code>ynab-cli run payees list-duplicates [OPTIONS]\n</code></pre> <p>Options:</p> Name Type Description Default <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"#ynab-cli-run-payees-list-unused","title":"ynab-cli run payees list-unused","text":"<p>List unused payees in the YNAB budget.</p> <p>Usage:</p> <pre><code>ynab-cli run payees list-unused [OPTIONS]\n</code></pre> <p>Options:</p> Name Type Description Default <code>--dry-run</code> boolean Run without making any changes. <code>False</code> <code>--prefix-unused</code> boolean Add a prefix to the unused payee names. <code>False</code> <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"#ynab-cli-run-payees-normalize-names","title":"ynab-cli run payees normalize-names","text":"<p>Normalize payee names in the YNAB budget.</p> <p>Usage:</p> <pre><code>ynab-cli run payees normalize-names [OPTIONS]\n</code></pre> <p>Options:</p> Name Type Description Default <code>--dry-run</code> boolean Run without making any changes. <code>False</code> <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"#ynab-cli-run-transactions","title":"ynab-cli run transactions","text":"<p>Manage transactions in the YNAB budget.</p> <p>Usage:</p> <pre><code>ynab-cli run transactions [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> Name Type Description Default <code>--budget-id</code> text YNAB budget ID. None <code>--help</code> boolean Show this message and exit. <code>False</code> <p>Subcommands</p> <ul> <li>apply-rules: Apply transaction rules from a JSON RULES_FILE to transactions in the YNAB budget.</li> </ul>"},{"location":"#ynab-cli-run-transactions-apply-rules","title":"ynab-cli run transactions apply-rules","text":"<p>Apply transaction rules from a JSON RULES_FILE to transactions in the YNAB budget.</p> <p>RULES_FILE should be a JSON file containing transaction rules.</p> <p>Usage:</p> <pre><code>ynab-cli run transactions apply-rules [OPTIONS] RULES_FILE\n</code></pre> <p>Options:</p> Name Type Description Default <code>--dry-run</code> boolean Run without making any changes. <code>False</code> <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"#ynab-cli-tui","title":"ynab-cli tui","text":"<p>Run the Textual User Interface (TUI) for YNAB CLI.</p> <p>Usage:</p> <pre><code>ynab-cli tui [OPTIONS]\n</code></pre> <p>Options:</p> Name Type Description Default <code>--access-token</code> text YNAB API access token. `` <code>--budget-id</code> text YNAB budget ID. `` <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"transaction_rules/","title":"Transaction Rules","text":"<p>Note</p> <p>Amounts are in milliunits and can be either positive or negative depending on if they are inflow or outflow.</p> <p>Note</p> <p>To get the category IDs you can use the <code>ynab run categories list-all</code> command.</p> <p>The rules use the rule-engine library, so read that documentation to figure out how to write the rules. If ANY of the rules in the <code>rules</code> list match a transaction then it will be updated with the <code>patch</code> details. The rules are supplied an instance of a <code>TransactionDetail</code>, and the <code>patch</code> needs to be an instance of a <code>SaveTransactionWithIdOrImportId</code>. Read the YNAB API documention to see what properties are available to base your rules on and update.</p> <p>This assumes you have a <code>rules.json</code> file with your rules to apply. It could look something like this: <pre><code>{\n    \"transaction_rules\": [\n        {\n            \"rules\": [\n                \"payee_name == 'My Payee' and amount == -213490\"\n            ],\n            \"patch\": {\n                \"category_id\": \"insert the category id you want to assign it to here\"\n            }\n        },\n        {\n            \"rules\": [\n                \"payee_name == 'My Split Transaction Payee' and amount == -346500\"\n            ],\n            \"patch\": {\n                \"category_id\": null,\n                \"subtransactions\": [\n                    {\n                        \"category_id\": \"insert the first category id you want to assign it to here\",\n                        \"amount\": -51980\n                    },\n                    {\n                        \"category_id\": \"insert the other category id you want to assign it to here\",\n                        \"amount\": -294520\n                    }\n                ]\n            }\n        }\n    ]\n}\n</code></pre></p>"}]}